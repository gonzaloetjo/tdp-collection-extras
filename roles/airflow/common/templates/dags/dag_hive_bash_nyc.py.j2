from airflow import DAG
from airflow.operators.bash_operator import BashOperator
from airflow.utils.dates import days_ago
from datetime import datetime, timedelta

default_args = {
    'owner': 'tdp_user',
    'depends_on_past': False,
    'start_date': days_ago(1),
    'retry_delay': timedelta(minutes=5),
    'run_as_user': 'tdp_user',
    'queue':'edge',

}

dag = DAG(
    'hive_bash_taxi_dag',
    default_args=default_args,
    description='A test hive DAG to create external table',
    schedule_interval=None,
)

create_database_hql = '''DROP DATABASE IF EXISTS tdp_user_db CASCADE;
                         CREATE DATABASE IF NOT EXISTS tdp_user_db 
                         LOCATION '/warehouse/tablespace/external/hive';'''


create_database = BashOperator(
    task_id='create_database',
    bash_command=f'beeline -e "{create_database_hql}"',
    env={"KRB5CCNAME": "/tmp/krb5cc_1101"},    
    dag=dag,
)

create_table_hql = '''
    CREATE EXTERNAL TABLE tdp_user_db.taxi_trip_ext (
        VendorID INT,
        lpep_pickup_datetime STRING,
        lpep_dropoff_datetime STRING,
        store_and_fwd_flag STRING,
        RatecodeID DOUBLE,
        PULocationID INT,
        DOLocationID INT,
        passenger_count DOUBLE,
        trip_distance DOUBLE,
        fare_amount DOUBLE,
        extra DOUBLE,
        mta_tax DOUBLE,
        tip_amount DOUBLE,
        tolls_amount DOUBLE,
        ehail_fee STRING,
        improvement_surcharge DOUBLE,
        total_amount DOUBLE,
        payment_type DOUBLE,
        trip_type DOUBLE,
        congestion_surcharge DOUBLE
    )
    ROW FORMAT DELIMITED
    FIELDS TERMINATED BY '\",\"'
    STORED AS PARQUET
    LOCATION 'data/nyc_green_taxi_trip';
'''

create_table = BashOperator(
    task_id='create_table',
    bash_command=f'beeline -e "{create_table_hql}"',
    env={"KRB5CCNAME": "/tmp/krb5cc_1101"},
    dag=dag,
)


select_table_hql = "SELECT * FROM tdp_user_db.taxi_trip_ext LIMIT 3"

select_table = BashOperator(
    task_id='select_table',
    bash_command=f'beeline -e "{select_table_hql}"',
    env={"KRB5CCNAME": "/tmp/krb5cc_1101"},
    dag=dag,
)


create_database >> create_table >> select_table
