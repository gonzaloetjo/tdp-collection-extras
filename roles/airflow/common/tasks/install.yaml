---
- name: Ensure hadoop group exists
  include_role:
    name: tosit.tdp.utils.group
  vars:
    group: "{{ airflow_group }}"

- name: Ensure airflow user exists
  include_role:
    name: tosit.tdp.utils.user
  vars:
    user: "{{ airflow_user }}"
    group: "{{ airflow_group }}"

- name: Airfloww | Ensures airflow install, certificates and configuration directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - "{{ airflow_root_dir }}/airflow-{{ airflow_version }}"
    - "{{ airflow_certs_dir }}"
    - "{{ airflow_root_conf_dir }}"
    - "{{ airflow_pid_dir }}"

- name: Ensures log directory
  file:
    path: '{{ airflow_log_dir }}'
    state: directory
    owner: '{{ airflow_user }}'
    group: '{{ airflow_group }}'

- name: Template airflow tmpfiles.d
  template:
    src: tmpfiles-airflow-webserver.conf.j2
    dest: /etc/tmpfiles.d/airflow-webserver.conf

- name: Create symbolic link to Airflow installation
  file:
    src: "{{ airflow_root_dir }}/airflow-{{ airflow_version }}"
    dest: "{{ airflow_install_dir }}"
    state: link

- name: Template Constraint file
  template:
    src: "{{ airflow_constraints_file }}.j2"
    dest: "/tmp/{{ airflow_constraints_file }}"


- name: Install Required packages
  yum:
    pkg: "{{ airflow_required_packages }}"
    state: present
  when: airflow_required_packages is defined

- name: Install Python dependencies
  pip:
    name: "{{ airflow_required_python_packages }}"
    executable: pip3
    extra_args: --constraint /tmp/{{ airflow_constraints_file }}
  when: airflow_required_python_packages is defined

- name: Pip install airflow {{ airflow_version }}
  pip:
    name: "apache-airflow=={{ airflow_version }}"
    executable: pip3
    extra_args: --constraint /tmp/{{ airflow_constraints_file }}

- name: Pip install airflow extra packages
  pip:
    name: "{{ airflow_extra_packages }}"
    extra_args: --constraint /tmp/{{ airflow_constraints_file }}
  when: airflow_extra_packages is defined

- name: Template airflow.cfg file
  template:
    src: airflow.cfg.j2
    dest: "{{ airflow_install_dir }}/airflow.cfg"

- name: Airflow | Upload airflow DAGs templates
  template:
    src: "{{ item }}"
    dest: "{{ airflow_dag_dir }}/{{ item | basename | splitext | first }}"
    owner: "{{ airflow_user }}"
    group: "{{ airflow_group }}"
  with_fileglob: "{{role_path}}/templates/dags/*.j2"
  ignore_errors: true

- name: Update .bashrc for Airflow user
  become: yes
  become_user: "{{ airflow_user }}"
  blockinfile:
    path: "~/.bashrc"
    block: |
      # Set environment variables for Airflow
      export AIRFLOW_HOME={{ airflow_install_dir }}
      export PATH=$PATH:/usr/local/bin